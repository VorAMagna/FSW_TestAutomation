<check fileVersion="2">
  <uid>3ad93759-09cd-487a-bad3-e61d7733610e</uid>
  <id>mcheck_sdt_sc007_b</id>
  <version>1</version>
  <status>proposed</status>
  <preVersionUid></preVersionUid>
  <author username="Model Engineering Solutions GmbH" domain="MES" email="mxam@model-engineers.com"/>
  <coAuthors/>
  <copyright>Model Engineering Solutions GmbH</copyright>
  <reviewers/>
  <templateUid>206e6a94-528a-7a2a-a982-901a9fd65b09</templateUid>
  <title>Definition TargetLink Function Interface - Outports</title>
  <adapter version="2.3">com.modelengineers.mxam.tooladapter.matlab</adapter>
  <executable>mes_sdt_sc007_b.m</executable>
  <repairOption>false</repairOption>
  <timeConsuming>false</timeConsuming>
  <properties>
    <enumeration name="Compiled Model Required" optional="false" private="false" multi="false">
      <description>Indicates whether the check needs a compiled model.</description>
      <enums>
        <value>no</value>
      </enums>
    </enumeration>
    <enumeration name="TargetLink Required" optional="false" private="false" multi="false">
      <description>Indicates whether this check requires a TargetLink installation or not.</description>
      <enums>
        <value>yes</value>
      </enums>
    </enumeration>
    <enumeration name="Model Root Required" optional="false" private="false" multi="false">
      <description>Indicates whether this check analyses up from the model root.</description>
      <enums>
        <value>no</value>
      </enums>
    </enumeration>
    <string name="MATLAB Versions" optional="true" private="false">
      <description>Related MATLAB versions</description>
      <value>all</value>
    </string>
    <string name="TargetLink Versions" optional="true" private="false">
      <description>Related TargetLink versions</description>
      <value><![CDATA[>=2.0]]></value>
    </string>
    <string name="Embedded Coder Versions" optional="true" private="false">
      <description>Related Embedded Coder versions</description>
      <value>irrelevant</value>
    </string>
    <richtext name="Pass-Fail Criteria" optional="false" private="false">
      <description>This is a detailed description of the pass and fail criteria.</description>
      <value><![CDATA[<p> The check inspects TargetLink Outports of each TargetLink function whose class is set to &quot;FCN_ARG&quot;, &quot;FCN_REF_ARG&quot; or &quot;FCN_RETURN&quot;. The output data type, scaling (LSB and Offset) and value range of each TargetLink Outport is compared with its destination block. TargetLink functions are subsystems which contain a TargetLink Function block. </p> 
<p> While determining the data type of the destination block, inheritance is considered as well. </p> 
<ul> 
 <li> Failed 1: The Outport is not connected to a destination block. </li> 
 <li> Failed 2: Matching Input port of Stateflow chart (destination block) not found. </li> 
 <li> Failed 3: There is no TargetLink data type set for the Outport or its destination block. </li> 
 <li> Failed 4: The base type of the TargetLink data type of the Outport or its destination block is not defined. </li> 
 <li> Failed 5: The base types of the Outport and its destination block are different. </li> 
 <li> Failed 6: The LSB values of the Outport and its destination block are different. </li> 
 <li> Failed 7: The offsets of the Outport and its destination block are different. </li> 
 <li> Failed 8: The LSB types (power of two vs. arbitrary) of the Outport and its destination block are different. </li> 
 <li> Failed 9: The user-defined value range constraints (&quot;minimum&quot; and/or &quot;maximum&quot;) of the Outport and its destination blocks are different. Set the check parameter SDT.sc007_b.IgnoreUndefinedRanges to true to ignore this criterion. </li> 
 <li> Failed 10: The TargetLink function is configured as scaling invariant, but the scaling propagation function is not defined in the scaling propagation field. </li> 
 <li> Review: The data type, scaling or range of the TargetLink Function Outport is different from its destination block, but this deviation may be justified. See Note 3.<br /> </li> 
 <li> Warning: The destination block does not support TargetLink data types. Use the check parameter SDT.sc007_b.IgnoreNonTLSources to deactivate this finding. </li> 
</ul> 
<p> Note 1: It is recommended to use the Rescaler block whenever data type conversion is necessary. Therefore, the Rescaler block is not considered a failed case.<br /> </p> 
<p> Note 2: TargetLink blocks whose output data type or scaling is expected to be different from its input are ignored in the analysis. This concerns the following blocks:<br /> Abs, Sum, Product, Logical and Relational Operator, Look-Up Table (and related ones), Sign, Relay, Discrete Filter, Discrete Transfer Fcn, FIR Filter, Discrete-Time Integrator, Discrete State-Space, Extract Bits, and Preprocessor IF. Additionally, the case when the function Outport is connected to the control port of a Switch or Multiport Switch block is ignored. </p> 
<p> Note 3: Some TargetLink blocks such as Saturate, Gain, Fcn, Trigonometry, Math, Sqrt get a review finding, since it might not be reasonable to have the same settings as the TargetLink Function Outport.<br /> </p>]]></value>
    </richtext>
    <richtext name="Technical Notes" optional="true" private="false">
      <description>Important notes concerning the implementation of the check.</description>
      <value><![CDATA[<ol> 
 <li> For each block, only the first deviation which has been found is reported. Re-run the check after having repaired the deviation to make sure that no further deviations are present. </li> 
 <li> If the TargetLink function is declared to be scaling invariant, the check evaluates the given scaling propagation function. However, it does not assess its functionality.<br /> </li> 
 <li> The check needs to set the model into compiled mode to access the data type of the TargetLink port and its source block(Simulink / TargetLink), if the data type is not available in the block property dialog. Therefore, the check only compiles the model on demand. </li> 
</ol>]]></value>
    </richtext>
    <richtext name="Solution" optional="false" private="false">
      <description>A solution for the user to repair faulty elements.</description>
      <value><![CDATA[Adjust the diverging signal properties accordingly. Consider using a Rescaler block to make the casting explicitly. Please note that adjusting the data type of a destination block may require further, secondary adjustments involving other blocks. In this case, re-run the check.
<br /> 
<ul> 
 <li> Solution 1: Connect the Outport to a suitable destination block.&nbsp; </li> 
 <li> Solution 2: Adjust the properties of the Stateflow chart. </li> 
 <li> Solution 3: Specify a suitable TargetLink data type for the Outport or its destination. </li> 
 <li> Solution 4: Specify a suitable base type for the Outport or its destination. </li> 
 <li> Solution 5: Match the base types of the Outport and its destination. </li> 
 <li> Solution 6: Match the LSB values of the Outport and its destination. </li> 
 <li> Solution 7: Match the offsets of the Outport and its destination. </li> 
 <li> Solution 8: Match the LSB types of the Outport and its destination. </li> 
 <li> Solution 9: Match the range constraints of the Outport and its destination. </li> 
 <li> Solution 10: Review the implementational specifications of the destination block. </li> 
 <li> Solution (Review): If possible use a Rescaler block to avoid implicit data type conversion.<br /> </li> 
</ul>Add known range limits to the &quot;min&quot; and &quot;max&quot; values of the TargetLink and Stateflow output variables, whenever possible. Do not use the inheritance mechanism for the size and type of Stateflow data if you are working with TargetLink versions &lt; 2.2.]]></value>
    </richtext>
    <richtext name="Repair Action" optional="false" private="false">
      <description>How the check automatically repairs faulty elements.</description>
      <value>No automatic repair action available.</value>
    </richtext>
    <richtext name="Example" optional="true" private="false">
      <description>Example of how the check functions.</description>
      <value></value>
    </richtext>
    <richtext name="Prerequisites" optional="true" private="false">
      <description>Prerequisites of the model for the check to function properly.</description>
      <value>TargetLink 2.0 or higher must be installed. A TargetLink license is not needed for running the check, but hyperlinks to open a faulty TargetLink block require a valid TargetLink license.</value>
    </richtext>
  </properties>
  <parameterSpecifications>
    <specification type="boolean">
      <name>SDT.sc007_b.IgnoreNonTLSources</name>
      <description>If set to true, Simulink destination blocks that are allowed to be used with TargetLink are not listed in the report. If set to false, the use of these Simulink destination blocks raises a note (see point no. 10 in the check description).</description>
      <defaultValue>false</defaultValue>
    </specification>
    <specification type="boolean">
      <name>SDT.sc007_b.IgnoreUndefinedRanges</name>
      <description>If set to true, only those ranges are checked for consistency that are defined. 
If set to false, the check considers a pair of ranges to be inconsistent, if at least one range is not defined.</description>
      <defaultValue>false</defaultValue>
    </specification>
    <specification type="string">
      <name>SDT.sc007_b.ValidBaseTypeCombinations</name>
      <description><![CDATA[Use the following format to specify each allowed pair of base types.
{<destination base type 1>, <outport base type 1>;<destination base type 2>, <inport base type 2>; ... }

The specification of  {'Int16','UInt8'}  states that if the data type of an Inport is defined with base type UInt8, the data type of its source block should be defined with base type Int16 or UInt8.]]></description>
      <defaultValue><![CDATA[{'Int16','UInt8';...
'Int32','UInt16'}]]></defaultValue>
    </specification>
  </parameterSpecifications>
  <parameterReferences/>
  <history>
    <record timestamp="12/04/2015 13:06:19">
      <author username="Model Engineering Solutions GmbH" domain="MES" email="mxam@model-engineers.com"/>
      <comment>Status changed from [DRAFT] to [PROPOSED]. </comment>
    </record>
  </history>
</check>