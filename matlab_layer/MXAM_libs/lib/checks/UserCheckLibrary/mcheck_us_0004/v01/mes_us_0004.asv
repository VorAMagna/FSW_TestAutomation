function [result,cr_items,r_stats]=mes_us_0004(system,cmd_s)			% type before the id the keyword mes_
[reg,s_regerr]=mxam_getCheckInfoFromDB('us_0004'); 						% get checkinfo from Database

% For MXAM Drive 3.3 required:
reg.license='';
%

% add all necessary information here:
reg.version_id = '1.0'; 												% add version id check_infos
reg.filename = mfilename; 												% add filename to check_infos
reg.functionhandle = 0; 												% clear invalid function handle for ModelAdvisor
r_myscheme.HiliteType='user1';
r_myscheme.ForegroundColor='blue';
r_myscheme.BackgroundColor='magenta';
set_param(0, 'HiliteAncestorsData', r_myscheme)
mes_preprocess; 														% sets done =1 when immediate return is required
if done==1																% mes_preprocess detected reason for not executing check?
    return																%then return here
end
try
    cs_blocks = find_system(model_name, 'LookUnderMasks', 'all',...
        'FollowLinks','on',...
        'Type', 'Block');% find all blocks in the model
    % filter irrelevant blocks, apply ignorelists, update statistics:
    [cs_blocks,r_stats] = mes_periprocess(cs_blocks,r_peri_ops);
    
    mes_progress('please wait...',length(cs_blocks),mesvar_PBStep,reg.check_id,0); % init progress bar
    % define default fields for check item struct, returned by this check
    default_item=struct('result','faulty','qualifier','block','linkaction','hilite',...
        'message','LSB,type or min max values are not identical');	%given error message if a violate found
    
    for i = 1 : length(cs_blocks)	% loop over to-be-checked blocks
        b=cs_blocks{i}; 			% the current block
        b_cancel=mes_progress(b);	% send progress-info to GUI and check for cancel message from GUI
        if b_cancel					% if there is a error
            break					%break
        end
        bh=get_param(b,'Handle'); % get block handle
        %____________________________________________________________ start of own function
        Name=get_param(cs_blocks{i},'Name');
        B=strncmp(Name,'L_',2);											% if blocks name starts with P_ check the block
        if(B)
            if ~(tl_get(bh,'output.lsb')==tl_get(bh,'table.lsb'))			%controll of the values (if true rule violation)
                hilite_system(bh,'user1')        							% Highlight block in defined colour
                % build check item structure for current rule violation: (predefined start)
                it=mxam_newcritem(default_item,...
                    'message','LSB values are not identical',...
                    'handle',bh,...
                    'path',mes_cleanpathname(bh));
                cr_items{end+1} = it; 										% add new check item to result list (predefined end)
            end
            F=strcmp(tl_get(bh,'output.type'),tl_get(bh,'table.type')); 	%controll of the values (if F==0 rule violation)
            if (F==0)
                hilite_system(bh,'user1')
                % build check item structure for current rule violation:(predefined start)
                it=mxam_newcritem(default_item,...
                    'message','Type values are not identical',...
                    'handle',bh,...
                    'path',mes_cleanpathname(bh));
                cr_items{end+1} = it; 										% add new check item to result list (predefined end)
            end
            if~(isnan (tl_get(bh,'output.min'))||isnan (tl_get(bh,'output.max'))||isnan (tl_get(bh,'table.min'))||isnan (tl_get(bh,'table.max')))							%controll of the values (if true rule violation)
                if ~(tl_get(bh,'output.min')==tl_get(bh,'table.min')||tl_get(bh,'output.max')==tl_get(bh,'table.max'))
                    if (tl_get(bh,'output.min') > tl_get(bh,'table.min')||tl_get(bh,'output.max') < tl_get(bh,'table.max'))
                        hilite_system(bh,'user1')								% Highlight block in defined colour
                        % build check item structure for current rule violation: (predefined start)
                        it=mxam_newcritem(default_item,...
                            'message','Output Range smaller than table range ',...
                            'handle',bh,...
                            'path',mes_cleanpathname(bh));
                        cr_items{end+1} = it;						% add new check item to result list(predefined end)
                    else
                        hilite_system(bh,'user1')								% Highlight block in defined colour
                        % build check item structure for current rule violation: (predefined start)
                        it=mxam_newcritem(default_item,...
                            'message','Output Range larger than table range ',...
                            'handle',bh,...
                            'path',mes_cleanpathname(bh));
                        cr_items{end+1} = it;						% add new check item to result list(predefined end)
                    end
                end
            else
                hilite_system(bh,'user1')								% Highlight block in defined colour
                % build check item structure for current rule violation: (predefined start)
                it=mxam_newcritem(default_item,...
                    'message','Min or max values are not given',...
                    'handle',bh,...
                    'path',mes_cleanpathname(bh));
                cr_items{end+1} = it;									% add new check item to result list(predefined end)
            end
        end
        %_______________________________________________________________end of own function
    end
catch 																	% error handling
    lem=lasterror;
    mes_progress('/full:'); % clean-up progressbar
    result=['error in ' mfilename ': ',lem.message];
    mes_postprocess;
    return
end
mes_progress('/full:'); % finally, show full progressbar
mes_postprocess; % clean up and report results