<guideline fileVersion="2">
  <uid>f84c8c7c-ef7a-4a4f-856c-e34367345bac</uid>
  <id>TL_RULE_GENERAL_ROUNDING</id>
  <version>1</version>
  <status>proposed</status>
  <preVersionUid></preVersionUid>
  <author username="Model Engineering Solutions GmbH" domain="MES" email="mxam@model-engineers.com"/>
  <coAuthors/>
  <copyright>dSPACE GmbH</copyright>
  <reviewers/>
  <templateUid>87c1ed92-ff48-43b6-97e8-66b83cb40265</templateUid>
  <title>Avoidance of Rounding Operations in MIL-Simulations</title>
  <properties>
    <enumeration name="Priority" optional="false" private="false" multi="false">
      <description>The priority for this guideline.</description>
      <enums>
        <value>strongly recommended</value>
      </enums>
    </enumeration>
    <string name="Scope" optional="true" private="false">
      <description>Project specific scope.</description>
      <value>dSPACE-TargetLink</value>
    </string>
    <enumeration name="Objective" optional="false" private="false" multi="true">
      <description>This is the rational for this guideline.</description>
      <enums>
        <value>code generation</value>
        <value>verification/validation</value>
      </enums>
    </enumeration>
    <string name="Source" optional="true" private="false">
      <description>Document and chapter this guideline is originally taken from.</description>
      <value>dSPACE 2.1 (section 8.6), dSPACE 3.0 (section 8.6), dSPACE 4.0 (section 1.2.9)</value>
    </string>
    <string name="Reference" optional="true" private="false">
      <description>Reference(s) to other documents.</description>
      <value></value>
    </string>
    <string name="MATLAB Versions" optional="true" private="false">
      <description>Related MATLAB versions</description>
      <value>all</value>
    </string>
    <string name="TargetLink Versions" optional="true" private="false">
      <description>Related TargetLink versions</description>
      <value>all</value>
    </string>
    <string name="Embedded Coder Versions" optional="true" private="false">
      <description>Related Embedded Coder versions</description>
      <value>irrelevant</value>
    </string>
    <enumeration name="Automatically Checkable" optional="false" private="false" multi="false">
      <description>To what extent is the guideline automatically checkable?</description>
      <enums>
        <value>fully</value>
      </enums>
    </enumeration>
    <enumeration name="Manual Review Required" optional="false" private="false" multi="false">
      <description>Is a manual review of this guideline required?</description>
      <enums>
        <value>no</value>
      </enums>
    </enumeration>
    <richtext name="Summary" optional="false" private="true">
      <description>Short summary of the guideline.</description>
      <value><![CDATA[<p> Do not use option &quot;Round Integer Calculation&quot; towards, use the &quot;Round Function&quot; instead. </p>]]></value>
    </richtext>
    <richtext name="Description" optional="false" private="false">
      <description>Text describing the guideline in more detail.</description>
      <value><![CDATA[<p> Rounding operations within integer calculations via the Round Integer Calculation towards option should be avoided. The Round Integer calculation towards property of Simulink blocks (with the exception of the rounding block) should be set to &acirc;€œZero&acirc;€�. If a rounding function is required, the Rounding Function block has to be used. </p>
<p> Note: Rounding operations appear if integer output data types are specified for a block in which floating-point values are used also, or if the results of integer operations are not displayable as integer variables (for instance divisions). </p>]]></value>
    </richtext>
    <richtext name="MES Remarks" optional="true" private="false">
      <description>Further remarks regarding guideline intention and description from MES.</description>
      <value><![CDATA[<p> For Example, a rounding operation is performed when the inports of a Sum block are non-whole-number floating-point data types (double or single, e.g. 0.3) and the outport of the Sum block is an integer data type (e.g. int16). In this case, the rounding function should be used instead. More precisely, the floating-point arithmetic should be performed first. The result of this operation should then be rounded to integer with the Rounding function. </p>]]></value>
    </richtext>
    <richtext name="Rationale" optional="false" private="false">
      <description>Detailed explaination of the intention of this guideline.</description>
      <value><![CDATA[<p> Proper modeling style, equal results for Simulink and TargetLink simulations. </p>
<p> The semantics of how the rounding operation is performed are partially nontransparent and block-specific in Simulink. TargetLink does not emulate the different rounding methods in integer calculations. </p>]]></value>
    </richtext>
    <richtext name="Example" optional="true" private="false">
      <description>Example describing the intention of this guideline.</description>
      <value><![CDATA[<p> Figure TL_RULE_GENERAL_ROUNDING-1 shows an example where integer rounding operations might be required. </p>
<p> <img src="TL_RULE_GENERAL_ROUNDING_1.png" /> </p>
<p class="imageCaption"> Figure TL_RULE_GENERAL_ROUNDING-1: Example of a <em>Gain</em> block which is driven by the floating-point data type <em>double</em> and specified to have the integer data type <em>int16</em>, which is the reason why a rounding operation might be required. </p>]]></value>
    </richtext>
    <richtext name="Counter Example" optional="true" private="false">
      <description>Counter example describing the intention of this guideline.</description>
      <value><![CDATA[<p> Figure&nbsp; TL_RULE_GENERAL_ROUNDING-2 shows an example which strange effects rounding can have when it is applied freely on all Simulink blocks. Therefore, such modeling should be avoided. </p>
<p> <img style="width: 807px; height: 301px;" src="TL_RULE_GENERAL_ROUNDING_2.png" /> </p>
<p class="imageCaption"> Figure&nbsp; TL_RULE_GENERAL_ROUNDING-2: Integer addition with rounding: Since an integer data type is specified for the output, and the input signals are non-integer, a rounding operation must be performed. Although the round integer calculation towards option is set to Nearest, Simulink calculates 30 as result. This is due to the fact that the input signals of the Sum block are directly cast to the output type, applying the specified rounding functionality. This behavior is highly block-specific. </p>]]></value>
    </richtext>
    <richtext name="Review Measures" optional="true" private="false">
      <description>A checklist of what is to be done to manually review this guideline.</description>
      <value></value>
    </richtext>
    <string name="Related Guidelines" optional="true" private="false">
      <description>Reference to other guidelines and explaination of the relationships.</description>
      <value></value>
    </string>
    <enumeration name="Model Type" optional="false" private="false" multi="true">
      <description>The type of the model that should conform to the guideline.</description>
      <enums>
        <value>functional model</value>
      </enums>
    </enumeration>
    <enumeration name="ISO 26262-6 Mapping" optional="true" private="false" multi="true">
      <description>Mapping of the guideline to the respective category as defined in ISO 26262-6 Table 1 (T1) and Table 8 (T8).
MES suggests a mapping for guidelines as part of the original distribution.
This mapping information is not part of the original guideline document as provided by the publisher.</description>
      <enums>
        <value>T1.1b Use of Language Subset</value>
        <value>T1.1d Use of Defensive Implementation Techniques</value>
      </enums>
    </enumeration>
    <enumeration name="ISO 25119-3 Mapping" optional="true" private="false" multi="true">
      <description>Mapping of the guideline to the respective category as defined in ISO 25119-3 Table 3.
MES suggests a mapping for guidelines as part of the original distribution.
This mapping information is not part of the original guideline document as provided by the publisher.</description>
      <enums>
        <value>T3-1.3 Language Subset</value>
        <value>T3-2.2 Defensive Programming</value>
      </enums>
    </enumeration>
    <string name="MISRA-C" optional="true" private="false">
      <description>Reference to MISRA C rules that this guideline applies to.</description>
      <value></value>
    </string>
    <string name="DO-178C/DO-331" optional="true" private="false">
      <description>The guideline is associated with DO-178C/DO-331 categories.</description>
      <value></value>
    </string>
    <string name="Last Change" optional="true" private="false">
      <description>In which version of the source guideline document was the guideline changed at last.</description>
      <value></value>
    </string>
  </properties>
  <checkReferences>
    <reference refUid="0d3906d0-97b0-4a0f-b350-dcf97035a0bf" refId="mcheck_ds_0100" refTitle="Avoidance of Rounding Operations" refVersion="1"/>
  </checkReferences>
  <parameterSettings>
    <check/>
  </parameterSettings>
  <history>
    <record timestamp="07/08/2016 15:22:53">
      <author username="Model Engineering Solutions GmbH" domain="MES" email="mxam@model-engineers.com"/>
      <comment><![CDATA[Copied from 'Avoidance of Rounding Operations' (ID: ds_0100, Version: v01, Library: MATLAB-dSPACE-TargetLink, Author: Model Engineering Solutions GmbH)]]></comment>
    </record>
    <record timestamp="09/15/2016 17:01:07">
      <author username="Model Engineering Solutions GmbH" domain="MES" email="mxam@model-engineers.com"/>
      <comment>Status changed from [DRAFT] to [PROPOSED]. </comment>
    </record>
  </history>
</guideline>