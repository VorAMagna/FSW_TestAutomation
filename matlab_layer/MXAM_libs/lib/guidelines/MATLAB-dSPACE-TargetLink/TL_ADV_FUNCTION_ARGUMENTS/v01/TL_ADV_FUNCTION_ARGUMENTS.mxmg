<guideline fileVersion="2">
  <uid>06a5034c-7b82-429d-9ce9-76891d6420cc</uid>
  <id>TL_ADV_FUNCTION_ARGUMENTS</id>
  <version>1</version>
  <status>draft</status>
  <preVersionUid></preVersionUid>
  <author username="Model Engineering Solutions GmbH" domain="MES" email="mxam@model-engineers.com"/>
  <coAuthors/>
  <copyright>dSPACE GmbH</copyright>
  <reviewers/>
  <templateUid>87c1ed92-ff48-43b6-97e8-66b83cb40265</templateUid>
  <title>Handling of Function Arguments vs. Global Variables</title>
  <properties>
    <enumeration name="Priority" optional="false" private="false" multi="false">
      <description>The priority for this guideline.</description>
      <enums>
        <value>required</value>
      </enums>
    </enumeration>
    <string name="Scope" optional="true" private="false">
      <description>Project specific scope.</description>
      <value>dSPACE-TargetLink</value>
    </string>
    <enumeration name="Objective" optional="false" private="false" multi="true">
      <description>This is the rational for this guideline.</description>
      <enums>
        <value>code generation</value>
      </enums>
    </enumeration>
    <string name="Source" optional="true" private="false">
      <description>Document and chapter this guideline is originally taken from.</description>
      <value>dSPACE 2.1 (section 10.2), dSPACE 3.0 (section 10.2), dSPACE 4.0 (section 5.3.2)</value>
    </string>
    <string name="Reference" optional="true" private="false">
      <description>Reference(s) to other documents.</description>
      <value><![CDATA[TargetLink Advanced Practices Guide [2], Mapping of Subsystems and Functions > Defining the Function Interface > Function Interfaces]]></value>
    </string>
    <string name="MATLAB Versions" optional="true" private="false">
      <description>Related MATLAB versions</description>
      <value>all</value>
    </string>
    <string name="TargetLink Versions" optional="true" private="false">
      <description>Related TargetLink versions</description>
      <value>all</value>
    </string>
    <string name="Embedded Coder Versions" optional="true" private="false">
      <description>Related Embedded Coder versions</description>
      <value>irrelevant</value>
    </string>
    <enumeration name="Automatically Checkable" optional="false" private="false" multi="false">
      <description>To what extent is the guideline automatically checkable?</description>
      <enums>
        <value>no</value>
      </enums>
    </enumeration>
    <enumeration name="Manual Review Required" optional="false" private="false" multi="false">
      <description>Is a manual review of this guideline required?</description>
      <enums>
        <value>yes</value>
      </enums>
    </enumeration>
    <richtext name="Summary" optional="false" private="true">
      <description>Short summary of the guideline.</description>
      <value><![CDATA[<p> the variable class of TargetLink inports and outports cause these variables to be either function arguments or global variables in the generated code </p>]]></value>
    </richtext>
    <richtext name="Description" optional="false" private="false">
      <description>Text describing the guideline in more detail.</description>
      <value><![CDATA[<p> The variables for TargetLink Inports and Outports are created as either function arguments or global variables, depending on the specified variable classes for the inports and outports. Depending on those settings, either RAM or stack consumption can be reduced at the expense of the other resource. </p>]]></value>
    </richtext>
    <richtext name="MES Remarks" optional="true" private="false">
      <description>Further remarks regarding guideline intention and description from MES.</description>
      <value></value>
    </richtext>
    <richtext name="Rationale" optional="false" private="false">
      <description>Detailed explaination of the intention of this guideline.</description>
      <value><![CDATA[<p> Depending on the choice of function parameters or global variables, either RAM or stack consumption can be reduced at the expense of the other resource. Passing values as function arguments usually increases the execution time. Moreover, the software architecture might require certain function interfaces to be generated by TargetLink. </p>]]></value>
    </richtext>
    <richtext name="Example" optional="true" private="false">
      <description>Example describing the intention of this guideline.</description>
      <value><![CDATA[<p> In the example in Figure TL_ADV_FUNCTION_ARGUMENTS-1, the input variables are passed as function arguments on one hand and as global variables on the other. This can be done for instance, by specifying the predefined FCN_ARG and FCN_REF_ARG variable classes on one hand and GLOBAL on the other for the TargetLink Inport and Outport blocks (in general: depending on the Scope property of the variable class). If no TargetLink Inports and Outports are present, the default behavior of the code generator is applied, i.e. global variables are used.<br /> As a result, TargetLink generates the following code for both subsystems: </p>
<p> As a result, TargetLink generates the following code for both subsystems: </p>
<p class="codeSample"> /* call of function: Schnittstellen/GlobalVars */<br /> Sa3_GlobalVars(); </p>
<p class="codeSample"> /* call of function: Schnittstellen/FcnArg */<br /> Sa2_FcnArg(In, &amp;(Out1)); </p>
<p> <img style="width: 627px; height: 297px;" src="TL_ADV_FUNCTION_ARGUMENTS_Ex.png" /></p>
<p class="imageCaption"> Figure TL_ADV_FUNCTION_ARGUMENTS-1: Passing input parameters as global variables or function arguments. </p>]]></value>
    </richtext>
    <richtext name="Counter Example" optional="true" private="false">
      <description>Counter example describing the intention of this guideline.</description>
      <value></value>
    </richtext>
    <richtext name="Review Measures" optional="true" private="false">
      <description>A checklist of what is to be done to manually review this guideline.</description>
      <value></value>
    </richtext>
    <string name="Related Guidelines" optional="true" private="false">
      <description>Reference to other guidelines and explaination of the relationships.</description>
      <value></value>
    </string>
    <enumeration name="Model Type" optional="false" private="false" multi="true">
      <description>The type of the model that should conform to the guideline.</description>
      <enums>
        <value>functional model</value>
      </enums>
    </enumeration>
    <enumeration name="ISO 26262-6 Mapping" optional="true" private="false" multi="true">
      <description>Mapping of the guideline to the respective category as defined in ISO 26262-6 Table 1 (T1) and Table 8 (T8).
MES suggests a mapping for guidelines as part of the original distribution.
This mapping information is not part of the original guideline document as provided by the publisher.</description>
      <enums/>
    </enumeration>
    <string name="MISRA-C" optional="true" private="false">
      <description>Reference to MISRA C rules that this guideline applies to.</description>
      <value></value>
    </string>
    <string name="DO-178C/DO-331" optional="true" private="false">
      <description>The guideline is associated with DO-178C/DO-331 categories.</description>
      <value></value>
    </string>
    <string name="Last Change" optional="true" private="false">
      <description>In which version of the source guideline document was the guideline changed at last.</description>
      <value></value>
    </string>
  </properties>
  <checkReferences/>
  <parameterSettings>
    <check/>
  </parameterSettings>
  <history>
    <record timestamp="08/29/2016 11:51:51">
      <author username="Model Engineering Solutions GmbH" domain="MES" email="mxam@model-engineers.com"/>
      <comment><![CDATA[Copied from 'Handling of Function Arguments vs. Global Variables' (ID: ds_0112, Version: v01, Library: MATLAB-dSPACE-TargetLink, Author: Model Engineering Solutions GmbH)]]></comment>
    </record>
  </history>
</guideline>