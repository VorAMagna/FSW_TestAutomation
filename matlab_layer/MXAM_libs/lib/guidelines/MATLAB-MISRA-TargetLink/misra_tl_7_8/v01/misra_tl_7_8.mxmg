<guideline fileVersion="2">
  <uid>edc9834e-7f17-47f4-a29f-ddc3d6418bc8</uid>
  <id>misra_tl_7_8</id>
  <version>1</version>
  <status>accepted</status>
  <preVersionUid></preVersionUid>
  <author username="Model Engineering Solutions GmbH" domain=""/>
  <coAuthors/>
  <copyright>MIRA Limited, 2007</copyright>
  <reviewers/>
  <templateUid>87c1ed92-ff48-43b6-97e8-66b83cb40265</templateUid>
  <title>Avoiding the Use of Volatile Variables in Logical Expressions</title>
  <properties>
    <enumeration name="Priority" optional="false" private="false" multi="false">
      <description>The priority for this guideline.</description>
      <enums>
        <value>recommended</value>
      </enums>
    </enumeration>
    <string name="Scope" optional="true" private="false">
      <description>Project specific scope.</description>
      <value></value>
    </string>
    <enumeration name="Objective" optional="false" private="false" multi="true">
      <description>This is the rational for this guideline.</description>
      <enums>
        <value>code generation</value>
      </enums>
    </enumeration>
    <string name="Source" optional="true" private="false">
      <description>Document and chapter this guideline is originally taken from.</description>
      <value>MISRA AC TL 1.0</value>
    </string>
    <string name="Reference" optional="true" private="false">
      <description>Reference(s) to other documents.</description>
      <value></value>
    </string>
    <string name="MATLAB Versions" optional="true" private="false">
      <description>Related MATLAB versions</description>
      <value>all</value>
    </string>
    <string name="TargetLink Versions" optional="true" private="false">
      <description>Related TargetLink versions</description>
      <value>all</value>
    </string>
    <string name="Embedded Coder Versions" optional="true" private="false">
      <description>Related Embedded Coder versions</description>
      <value>irrelevant</value>
    </string>
    <enumeration name="Automatically Checkable" optional="false" private="false" multi="false">
      <description>To what extent is the guideline automatically checkable?</description>
      <enums>
        <value>no</value>
      </enums>
    </enumeration>
    <enumeration name="Manual Review Required" optional="false" private="false" multi="false">
      <description>Is a manual review of this guideline required?</description>
      <enums>
        <value>yes</value>
      </enums>
    </enumeration>
    <richtext name="Summary" optional="false" private="true">
      <description>Short summary of the guideline.</description>
      <value><![CDATA[<p> do not use volatile variables in logical expressions </p>]]></value>
    </richtext>
    <richtext name="Description" optional="false" private="false">
      <description>Text describing the guideline in more detail.</description>
      <value><![CDATA[<p> Care should be taken to avoid situations where volatile variables are generated as second operands in logical expressions. </p>]]></value>
    </richtext>
    <richtext name="MES Remarks" optional="true" private="false">
      <description>Further remarks regarding guideline intention and description from MES.</description>
      <value></value>
    </richtext>
    <richtext name="Rationale" optional="false" private="false">
      <description>Detailed explaination of the intention of this guideline.</description>
      <value><![CDATA[<p> MISRA C Rule 12.2 requires that the value of an expression should be the same under any order of evaluation that the standard permits. This is only true for volatile variables if they are only accessed in simple assignment statements. </p>
<p> MISRA C Rule 12.4 requires that the second operand of logical expressions is free of side effects. This is not true for volatile variables because their value can change independently of the execution of the program. </p>]]></value>
    </richtext>
    <richtext name="Example" optional="true" private="false">
      <description>Example describing the intention of this guideline.</description>
      <value><![CDATA[If compliance to those rules is intended, a non-erasable variable should be specified for the output of the Relational Operator block, see Figure misra_tl_7_8-1: Hence, the output variable cannot be eliminated and the volatile output of the Constant block does not appear in the logical expression:
<p class="codeSample"> Sa1_Relational_Operator = Sa1_InPort1 &gt; Sa1_Constant;<br /> Sa1_OutPort = Sa1_InPort &amp;&amp; Sa1_Relational_Operator; </p>
<p> The code now complies with MISRA C Rules 12.2 and 12.4. </p>
<img style="width: 508px; height: 375px;" src="MISRA_TL_R_7_8_Fig_3.png" />
<br />
<p class="imageCaption"> Figure misra_tl_7_8-1: Specification of a non-erasable output variable for the <em>Relational Operator</em> block. The output variable then appears in the code, preventing the volatile constant from serving as a second operand in a logical expression. </p>]]></value>
    </richtext>
    <richtext name="Counter Example" optional="true" private="false">
      <description>Counter example describing the intention of this guideline.</description>
      <value><![CDATA[<p> In the model in Figure misra_tl_7_8-2: a volatile variable (the output of the Constant block) is used in a comparison and a subsequent logical expression. The output of the Constant block is volatile because the STATIC_CAL variable class has been specified for it, see Figure misra_tl_7_8-3. Since the default variable class is chosen for the additional variables, TargetLink generates the following code: </p>
<p class="codeSample"> Sa1_OutPort = Sa1_InPort &amp;&amp; (Sa1_InPort1 &gt; Sa1_Constant); </p>
<p> The volatile variable Sa1_Constant appears as a second operand in a logical expression, thereby violating the MISRA C Rules 12.2 and 12.4.&nbsp;<br /> </p>
<p> <img style="width: 386px; height: 193px;" src="MISRA_TL_R_7_8_Fig_1.png" /><br /> </p>
<p> Figure misra_tl_7_8-2: Volatile constant used in a logical expression. </p>
<p> <img style="width: 513px; height: 409px;" src="MISRA_TL_R_7_8_Fig_2.png" /><br /> </p>
<p> Figure misra_tl_7_8-3: The variable class for the output variable of the Constant block is specified as STATIC_CAL. The class has the volatile property set. </p>
<p> <br /> </p>]]></value>
    </richtext>
    <richtext name="Review Measures" optional="true" private="false">
      <description>A checklist of what is to be done to manually review this guideline.</description>
      <value><![CDATA[Review all logical expressions and make sure that there are no volatile variables generated as second operands in the logical expression.
<br />]]></value>
    </richtext>
    <string name="Related Guidelines" optional="true" private="false">
      <description>Reference to other guidelines and explaination of the relationships.</description>
      <value>Compliance with MISRA C rules 12.2 and 12.4</value>
    </string>
    <enumeration name="Model Type" optional="false" private="false" multi="true">
      <description>The type of the model that should conform to the guideline.</description>
      <enums>
        <value>implementation model</value>
      </enums>
    </enumeration>
    <enumeration name="ISO 26262-6 Mapping" optional="true" private="false" multi="true">
      <description>Mapping of the guideline to the respective category as defined in ISO 26262-6 Table 1 (T1) and Table 8 (T8).
MES suggests a mapping for guidelines as part of the original distribution.
This mapping information is not part of the original guideline document as provided by the publisher.</description>
      <enums>
        <value>T1.1d Use of Defensive Implementation Techniques</value>
        <value>T1.1e Use of Established Design Principles</value>
      </enums>
    </enumeration>
    <enumeration name="ISO 25119-3 Mapping" optional="true" private="false" multi="true">
      <description>Mapping of the guideline to the respective category as defined in ISO 25119-3 Table 3.
MES suggests a mapping for guidelines as part of the original distribution.
This mapping information is not part of the original guideline document as provided by the publisher.</description>
      <enums>
        <value>T3-2.2 Defensive Programming</value>
        <value>T3-3.1 Use of Coding Standard</value>
      </enums>
    </enumeration>
    <string name="MISRA-C" optional="true" private="false">
      <description>Reference to MISRA C rules that this guideline applies to.</description>
      <value></value>
    </string>
    <string name="DO-178C/DO-331" optional="true" private="false">
      <description>The guideline is associated with DO-178C/DO-331 categories.</description>
      <value></value>
    </string>
    <string name="Last Change" optional="true" private="false">
      <description>In which version of the source guideline document was the guideline changed at last.</description>
      <value></value>
    </string>
  </properties>
  <checkReferences/>
  <parameterSettings>
    <check/>
  </parameterSettings>
  <history/>
</guideline>