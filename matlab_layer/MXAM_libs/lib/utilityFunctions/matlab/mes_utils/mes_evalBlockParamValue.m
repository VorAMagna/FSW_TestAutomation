% Evaluate the value of a block parameter.
% SYNTAX:
% =======
% value = mes_evalBlockParamValue(s,hBlock);
%
% DESCRIPTION:
% ============
% The value of a block parameter can be a literal number, string, workspace
% variable or a mask parameter of the parent subsystem. To get the true value
% of the parameter, the value of the parameter should be evaluated in base
% workspace or in mask workspace. This function attempts evaluations in
% the following order:
% 
% 1. As a mask parameter of the parent.
% 2. As a model workspace parameter.
% 3. As a base workspace parameter.
%
% INPUT ARGUMENTS:
% ================
% -  hBlock          double (no default value)
%                    Handle of the block whose parameter value is
%                    to be evaluated
% -  s               value of the parameter, can be string or literal
%                    number
%
% RETURN VALUES:
% ==============
% -value             true value of the parameter, can be string or number
% -b_isMaskPara      true if s is a mask parameter of the parent of hBlock
% -s_valueMask       if b_isMaskPara is true, this is the string value of
% the mask parameter, e.g., if subsystem sub1 is a masked subsystem with mask
% parameter 'mask1' and value 'a.b', and one block inside sub1 is a constant
% block with constant value set to mask1, then the return value is the value of
% mask1, that is, b_isMaskPara = true, s_valueMask = 'a.b'.
% ********************** ******************************************
% Copyright:  Model Engineering Solutions
% Date:       $Date: 2020/07/31 16:10:04CEST $
% Revision:   $Rev: 7148 $
% ****************************************************************
%
% ---------------------------------------------------------------
% Author: Yongke Yu  & Jörg Sangals
% $Id: mes_evalBlockParamValue.m 1.1 2020/07/31 16:10:04CEST Vojnic-Hajduk, Vladimir (vladvojn) Exp  $
% ----------------------------
% REVISION HISTORY:
% =================
% 2014/05/22: after call lh_modelWorkspace.evalin, set the file flag
% 'dirty' to off to avoid to ask for saving the model.
% 2012/08/17: add return value b_isMaskPara and  s_valueMask
% 2012/04/25: if input string is a function call, do not get varaibles, but
% eval in model and then if necessary in base workspace.
% 2011/11/14: handle for case such as a(3) and a is a variable.
% 2011/10/28: order of handling the parameter is changed: 1. evulate in
%             masks 2. in model workspace 3. in base workspace;
%             handle structure case such as a.b.c (parameter is a field of
%             a structure);
%             handle function call in parameter such as 'a+b+c.d+sqrt(v)'
% 2011/07/22: content of constant block maybe matrix
% 2011/07/20: bug fix: handle the case that the value of constant block is
% [ 1 2 3]', add local function loc_convertVStringToHString
% 2010/11/11: consider case that the value may be a string, so that it is
% not necessary to evulate again.
% 2010/10/04: the value of a variable maybe an array, so that use
% loc_var2str to instead num2str.
% 2010/05/26: if the value is a simulink.parameter, returnt its value.
% 2010/03/19: spilit the s to get varaibles, then eval all variables to
%             get the value. Because the s may be an expression, such as
%             'a+1'
% 2010/02/10: first search in the masks of the block itself, then from its
%             parent
% 2010/02/10: created by yyk from local function generated by Jörg of
%             mes_getOutputDataInfoOfTLblock

function [value,b_isMaskPara,s_valueMask]=mes_evalBlockParamValue(s,hBlock)




















































































































































































































































































































